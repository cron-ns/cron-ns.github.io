{"version":3,"file":"component---src-templates-index-page-js-3354f2e8ec1269c76261.js","mappings":"+JAGMA,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAF,OACX,0BAAQC,MAAO,CACXC,WAAW,gBACXC,aAAa,YAEb,uBAAKF,MAAO,CACRG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAER,sBAAIL,MAAO,CAACG,OAAQ,IAChB,gBAAC,KAAD,CAAMG,GAAG,IAAIN,MAAO,CAChBO,MAAM,QACNC,eAAe,SACfT,OAOpBD,EAAOW,aAAe,CAClBV,UAAU,IAEd,QCyBA,EA/Ce,SAAC,GAAgB,IAAfW,EAAc,EAAdA,SACPC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACI,gCACI,gBAAC,EAAD,CAAQb,UAAWY,EAAKE,KAAKC,aAAaC,QAC1C,uBACIf,MAAO,CACHG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGZ,4BAAOK,GACP,0BAAQV,MAAO,CACXC,WAAW,gBACXM,MAAM,QACNS,aAAc,YACdC,OAAO,SAJX,KAMM,IAAIC,MAAOC,cANjB,0BAOQ,qBAAGC,KAAK,8BACJ,uBACIpB,MAAO,CACHqB,MAAM,UACNJ,OAAO,UACPK,aAAa,MACbC,MAAO,SAEXC,IAAI,gBACJC,IAAI,wF,yqBCvCpC,IAAMC,EAAa,CACfnB,MAAO,UACPF,QAAS,GACTsB,WAAY,4CAEVC,EAAgB,CAClBC,UAAW,EACX3B,aAAc,GACdE,SAAU,SAeR0B,EAAa,CACf5B,aAAc,GACd6B,YAAa,GAEXC,EAAiB,CACnBC,WAAY,IACZC,SAAU,GACV9B,SAAU,IACVF,aAAc,IAGZiC,EAAY,CACd5B,MAAO,UACP0B,WAAY,OACZC,SAAU,GACVE,cAAe,MAGbC,EAAY,OACXF,GADW,IAEdG,cAAe,OACfpC,aAAc,KAGZqC,EAAmB,CACrBhC,MAAO,UACP2B,SAAU,GACVL,UAAW,GACX3B,aAAc,EACdsC,WAAY,MASVC,EAAa,CACflC,MAAO,OACPmC,gBAAiB,UACjBC,OAAQ,oBACRT,SAAU,GACVD,WAAY,OACZW,cAAe,EACftB,aAAc,EACdjB,QAAS,UACTwC,QAAS,eACTC,SAAU,WACVC,KAAM,EACNC,WAAY,GACZR,WAAY,GAGD,WAAS,GAAsB,IAArBS,EAAoB,EAApBA,YAAatC,EAAO,EAAPA,KAC9BuC,EAAQD,EAAYC,MAGpBC,EAF0BxC,EAAtByC,kBACAC,MACsBC,QAAO,qBAAEC,KAAeC,YAAYN,OAASA,KAAOO,KAAI,qBAAEF,KAAeC,eAEvG,OACI,gBAAC,IAAD,KACI,wBAAMxD,MAAO0B,GACjB,0CACA,sBAAI1B,MAAO4B,GAAX,UACUsB,GAEV,sBAAIlD,MAAO8B,GACT,sBAAI9B,MAAOqC,IAEVc,EAAkBM,KAAI,SAACC,GAAD,OACrB,sBAAIC,IAAKD,EAAKE,KAAM5D,MAAK,OAAOgC,GAAP,IAAuBzB,MAAO,aACrD,4BACE,qBACEP,MAAOmC,EACPf,KAAI,GAAKsC,EAAKE,MAEbF,EAAK3C,MAJR,IAIgB2C,EAAKG,MAEpBH,EAAKI,OACJ,wBAAM9D,MAAOyC,EAAY,aAAW,aAApC,UACUS,GAGZ,qBAAGlD,MAAOuC,GAAmBmB,EAAKK","sources":["webpack://cron-ns/./src/components/header.js","webpack://cron-ns/./src/components/layout.js","webpack://cron-ns/./src/templates/index_page.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\nconst Header = ({siteTitle}) => (\n    <header style={{\n        background: `rebeccapurple`,\n        marginBottom: `1.45rem`\n    }}>\n        <div style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `1.45rem 1.0875rem`,\n        }}>\n            <h1 style={{margin: 0}}>\n                <Link to=\"/\" style={{\n                    color: `white`,\n                    textDecoration: `none`,\n                }}>{siteTitle}\n                </Link>\n            </h1>\n        </div>\n    </header>\n)\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\nexport default Header;","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Header from \"./header\";\nimport './layout.css';\n\nconst Layout = ({children}) => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n    \n    return (\n        <>\n            <Header siteTitle={data.site.siteMetadata.title}></Header>\n            <div\n                style={{\n                    margin: `0 auto`,\n                    maxWidth: 960,\n                    padding: `0 1.0875rem 1.45rem`,\n                }}\n            >\n                <main>{children}</main>\n                <footer style={{\n                    background: `rebeccapurple`,\n                    color: `white`,\n                    paddingRight: \"1.0875rem\",\n                    height: `auto`,\n                }}>\n                    @{new Date().getFullYear()}, Built with {`Cron-ns`}\n                        <a href=\"https://twitter.com/jsw_jx\">\n                            <img\n                                style={{\n                                    width: `1.75rem`,\n                                    height: `1.75rem`,\n                                    borderRadius: `50%`,\n                                    float: \"right\",\n                                }}\n                                alt=\"Personal Icon\"\n                                src=\"https://pbs.twimg.com/profile_images/1178320510461054981/ajZLVv36_400x400.jpg\"\n                                />\n                        </a>\n                </footer>\n            </div>\n        </>\n    )\n}\n\nexport default Layout;","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n// styles\nconst pageStyles = {\n    color: \"#232129\",\n    padding: 96,\n    fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\nconst headingStyles = {\n    marginTop: 0,\n    marginBottom: 64,\n    maxWidth: \"30rem\",\n}\nconst headingAccentStyles = {\n    color: \"#663399\",\n}\nconst paragraphStyles = {\n    marginBottom: 48,\n}\nconst codeStyles = {\n    color: \"#8A6534\",\n    padding: 4,\n    backgroundColor: \"#FFF4DB\",\n    fontSize: \"1.25rem\",\n    borderRadius: 4,\n}\nconst listStyles = {\n    marginBottom: 96,\n    paddingLeft: 0,\n}\nconst listItemStyles = {\n    fontWeight: 300,\n    fontSize: 24,\n    maxWidth: 560,\n    marginBottom: 30,\n}\n\nconst linkStyle = {\n    color: \"#8954A8\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n    verticalAlign: \"5%\",\n}\n\nconst docLinkStyle = {\n    ...linkStyle,\n    listStyleType: \"none\",\n    marginBottom: 24,\n}\n\nconst descriptionStyle = {\n    color: \"#232129\",\n    fontSize: 14,\n    marginTop: 10,\n    marginBottom: 0,\n    lineHeight: 1.25,\n}\n\nconst docLink = {\n    text: \"Twitter\",\n    url: \"https://twitter.com/home?lang=en\",\n    color: \"#8954A8\",\n}\n\nconst badgeStyle = {\n    color: \"#fff\",\n    backgroundColor: \"#088413\",\n    border: \"1px solid #088413\",\n    fontSize: 11,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    borderRadius: 4,\n    padding: \"4px 6px\",\n    display: \"inline-block\",\n    position: \"relative\",\n    top: -2,\n    marginLeft: 10,\n    lineHeight: 1,\n}\n\nexport default function({pageContext, data}) {\n    let topic = pageContext.topic;\n    const { allMarkdownRemark } = data;\n    const { edges } = allMarkdownRemark;\n    let markdownSameTopic = edges.filter(({node}) => node.frontmatter.topic == topic).map(({node}) => node.frontmatter);\n\n    return (\n        <Layout>\n            <main style={pageStyles}>\n        <title>Home Page</title>\n        <h1 style={headingStyles}>\n          Topic: {topic}\n        </h1>\n        <ul style={listStyles}>\n          <li style={docLinkStyle}>\n          </li>\n          {markdownSameTopic.map((link) => (\n            <li key={link.path} style={{ ...listItemStyles, color: \"#E95800\" }}>\n              <span>\n                <a\n                  style={linkStyle}\n                  href={`${link.path}`}\n                >\n                  {link.title} {link.date}\n                </a>\n                {link.badge && (\n                  <span style={badgeStyle} aria-label=\"New Badge\">\n                    TOPIC: {topic}\n                  </span>\n                )}\n                <p style={descriptionStyle}>{link.abstract}</p>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </main>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    {\n      allMarkdownRemark {\n        edges {\n          node {\n            frontmatter {\n              path\n              topic\n              abstract\n              title\n              date\n              author\n            }\n          }\n        }\n      }\n    }\n`"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","paddingRight","height","Date","getFullYear","href","width","borderRadius","float","alt","src","pageStyles","fontFamily","headingStyles","marginTop","listStyles","paddingLeft","listItemStyles","fontWeight","fontSize","linkStyle","verticalAlign","docLinkStyle","listStyleType","descriptionStyle","lineHeight","badgeStyle","backgroundColor","border","letterSpacing","display","position","top","marginLeft","pageContext","topic","markdownSameTopic","allMarkdownRemark","edges","filter","node","frontmatter","map","link","key","path","date","badge","abstract"],"sourceRoot":""}