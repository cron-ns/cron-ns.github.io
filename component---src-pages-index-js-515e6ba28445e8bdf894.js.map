{"version":3,"file":"component---src-pages-index-js-515e6ba28445e8bdf894.js","mappings":"2JAGMA,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAF,OACX,0BAAQC,MAAO,CACXC,WAAW,gBACXC,aAAa,YAEb,uBAAKF,MAAO,CACRG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAER,sBAAIL,MAAO,CAACG,OAAQ,IAChB,gBAAC,KAAD,CAAMG,GAAG,IAAIN,MAAO,CAChBO,MAAM,QACNC,eAAe,SACfT,OAOpBD,EAAOW,aAAe,CAClBV,UAAU,IAEd,QCyBA,EA/Ce,SAAC,GAAgB,IAAfW,EAAc,EAAdA,SACPC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACI,gCACI,gBAAC,EAAD,CAAQb,UAAWY,EAAKE,KAAKC,aAAaC,QAC1C,uBACIf,MAAO,CACHG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGZ,4BAAOK,GACP,0BAAQV,MAAO,CACXC,WAAW,gBACXM,MAAM,QACNS,aAAc,YACdC,OAAO,SAJX,KAMM,IAAIC,MAAOC,cANjB,wBAOQ,qBAAGC,KAAK,KACJ,uBACIpB,MAAO,CACHqB,MAAM,UACNJ,OAAO,UACPK,aAAa,MACbC,MAAO,SAEXC,IAAI,gBACJC,IAAI,wF,6oBCtCpC,IAAMC,EAAa,CACjBnB,MAAO,UACPF,QAAS,GACTsB,WAAY,4CAERC,EAAgB,CACpBC,UAAW,EACX3B,aAAc,GACdE,SAAU,KAeN0B,EAAa,CACjB5B,aAAc,GACd6B,YAAa,GAETC,EAAiB,CACrBC,WAAY,IACZC,SAAU,GACV9B,SAAU,IACVF,aAAc,IAGViC,EAAY,CAChB5B,MAAO,UACP0B,WAAY,OACZC,SAAU,GACVE,cAAe,MAGXC,EAAY,OACbF,GADa,IAEhBG,cAAe,OACfpC,aAAc,KAGVqC,EAAmB,CACvBhC,MAAO,UACP2B,SAAU,GACVL,UAAW,GACX3B,aAAc,EACdsC,WAAY,MAGRC,EACE,UADFA,EAEC,mCAIDC,EAAa,CACjBnC,MAAO,OACPoC,gBAAiB,UACjBC,OAAQ,oBACRV,SAAU,GACVD,WAAY,OACZY,cAAe,EACfvB,aAAc,EACdjB,QAAS,UACTyC,QAAS,eACTC,SAAU,WACVC,KAAM,EACNC,WAAY,GACZT,WAAY,GAIRU,EAAQ,CACZ,CACEC,KAAM,2BACNC,IAAK,sBACLC,YACE,kEACF9C,MAAO,UACP+C,KAAM,eAkDV,UA7CkB,WAChB,OACE,gBAAC,IAAD,KACE,wBAAMtD,MAAO0B,GACX,0CACA,sBAAI1B,MAAO4B,GAAX,uBAEE,2BACA,wBAAM2B,KAAK,MAAM,aAAW,uBAA5B,WAIF,sBAAIvD,MAAO8B,GACT,sBAAI9B,MAAOqC,GACT,qBACErC,MAAOmC,EACPf,KAAI,GAAKqB,GAERA,IAGJS,EAAMM,KAAI,SAAAC,GAAI,OACb,sBAAIC,IAAKD,EAAKL,IAAKpD,MAAK,OAAOgC,GAAP,IAAuBzB,MAAOkD,EAAKlD,SACzD,4BACE,qBACEP,MAAOmC,EACPf,KAAI,GAAKqC,EAAKL,KAEbK,EAAKN,KAJR,IAIeM,EAAKH,MAEnBG,EAAKE,OACJ,wBAAM3D,MAAO0C,EAAY,aAAW,aAApC,QAIF,qBAAG1C,MAAOuC,GAAmBkB,EAAKJ","sources":["webpack://js-ng/./src/components/header.js","webpack://js-ng/./src/components/layout.js","webpack://js-ng/./src/pages/index.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\nconst Header = ({siteTitle}) => (\n    <header style={{\n        background: `rebeccapurple`,\n        marginBottom: `1.45rem`\n    }}>\n        <div style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `1.45rem 1.0875rem`,\n        }}>\n            <h1 style={{margin: 0}}>\n                <Link to=\"/\" style={{\n                    color: `white`,\n                    textDecoration: `none`,\n                }}>{siteTitle}\n                </Link>\n            </h1>\n        </div>\n    </header>\n)\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\nexport default Header;","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Header from \"./header\";\nimport './layout.css';\n\nconst Layout = ({children}) => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    return (\n        <>\n            <Header siteTitle={data.site.siteMetadata.title}></Header>\n            <div\n                style={{\n                    margin: `0 auto`,\n                    maxWidth: 960,\n                    padding: `0 1.0875rem 1.45rem`,\n                }}\n            >\n                <main>{children}</main>\n                <footer style={{\n                    background: `rebeccapurple`,\n                    color: `white`,\n                    paddingRight: \"1.0875rem\",\n                    height: `auto`,\n                }}>\n                    @{new Date().getFullYear()}, Built with {`JS-Ng`}\n                        <a href=\"/\">\n                            <img\n                                style={{\n                                    width: `1.75rem`,\n                                    height: `1.75rem`,\n                                    borderRadius: `50%`,\n                                    float: \"right\",\n                                }}\n                                alt=\"Personal Icon\"\n                                src=\"https://pbs.twimg.com/profile_images/1245573441639428102/lMnoyJWs_400x400.jpg\"\n                                />\n                        </a>\n                </footer>\n            </div>\n        </>\n    )\n}\n\nexport default Layout;","import { graphql, useStaticQuery } from \"gatsby\"\nimport * as React from \"react\"\nimport Layout from \"../components/layout\"\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\nconst headingAccentStyles = {\n  color: \"#663399\",\n}\nconst paragraphStyles = {\n  marginBottom: 48,\n}\nconst codeStyles = {\n  color: \"#8A6534\",\n  padding: 4,\n  backgroundColor: \"#FFF4DB\",\n  fontSize: \"1.25rem\",\n  borderRadius: 4,\n}\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n}\nconst listItemStyles = {\n  fontWeight: 300,\n  fontSize: 24,\n  maxWidth: 560,\n  marginBottom: 30,\n}\n\nconst linkStyle = {\n  color: \"#8954A8\",\n  fontWeight: \"bold\",\n  fontSize: 16,\n  verticalAlign: \"5%\",\n}\n\nconst docLinkStyle = {\n  ...linkStyle,\n  listStyleType: \"none\",\n  marginBottom: 24,\n}\n\nconst descriptionStyle = {\n  color: \"#232129\",\n  fontSize: 14,\n  marginTop: 10,\n  marginBottom: 0,\n  lineHeight: 1.25,\n}\n\nconst docLink = {\n  text: \"Twitter\",\n  url: \"https://twitter.com/home?lang=en\",\n  color: \"#8954A8\",\n}\n\nconst badgeStyle = {\n  color: \"#fff\",\n  backgroundColor: \"#088413\",\n  border: \"1px solid #088413\",\n  fontSize: 11,\n  fontWeight: \"bold\",\n  letterSpacing: 1,\n  borderRadius: 4,\n  padding: \"4px 6px\",\n  display: \"inline-block\",\n  position: \"relative\",\n  top: -2,\n  marginLeft: 10,\n  lineHeight: 1,\n}\n\n// data\nconst links = [\n  {\n    text: \"Distributed System notes\",\n    url: \"/blog/my-first-post\",\n    description:\n      \"A note for everyone who wants to start with distributed systems\",\n    color: \"#E95800\",\n    date: \"2022-01-01\"\n  }\n]\n\n// markup\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <main style={pageStyles}>\n        <title>Home Page</title>\n        <h1 style={headingStyles}>\n          Welcome to my space!\n          <br />\n          <span role=\"img\" aria-label=\"Party popper emojis\">\n            ðŸŽ‰ðŸŽ‰ðŸŽ‰\n          </span>\n        </h1>\n        <ul style={listStyles}>\n          <li style={docLinkStyle}>\n            <a\n              style={linkStyle}\n              href={`${docLink.url}`}\n            >\n              {docLink.text}\n            </a>\n          </li>\n          {links.map(link => (\n            <li key={link.url} style={{ ...listItemStyles, color: link.color }}>\n              <span>\n                <a\n                  style={linkStyle}\n                  href={`${link.url}`}\n                >\n                  {link.text} {link.date}\n                </a>\n                {link.badge && (\n                  <span style={badgeStyle} aria-label=\"New Badge\">\n                    NEW!\n                  </span>\n                )}\n                <p style={descriptionStyle}>{link.description}</p>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","paddingRight","height","Date","getFullYear","href","width","borderRadius","float","alt","src","pageStyles","fontFamily","headingStyles","marginTop","listStyles","paddingLeft","listItemStyles","fontWeight","fontSize","linkStyle","verticalAlign","docLinkStyle","listStyleType","descriptionStyle","lineHeight","docLink","badgeStyle","backgroundColor","border","letterSpacing","display","position","top","marginLeft","links","text","url","description","date","role","map","link","key","badge"],"sourceRoot":""}